{"ast":null,"code":"export function isHand(spaceId, color) {\n  switch (color) {\n    case \"red\":\n      return spaceId > 100 && spaceId < 105;\n    case \"blue\":\n      return spaceId > 200 && spaceId < 205;\n    case \"green\":\n      return spaceId > 300 && spaceId < 305;\n    case \"yellow\":\n      return spaceId > 400 && spaceId < 405;\n    default:\n      return false;\n  }\n}\n;\nexport function isCamp(spaceId, color) {\n  switch (color) {\n    case \"red\":\n      return spaceId < 100 && spaceId % 10 === 1;\n    case \"blue\":\n      return spaceId < 100 && spaceId % 10 === 6;\n    case \"green\":\n      return spaceId > 11 && spaceId < 16;\n    case \"yellow\":\n      return spaceId > 61 && spaceId < 66;\n    default:\n      return false;\n  }\n}\n;\nexport function isBoard(spaceId) {\n  return spaceId > 11 && spaceId < 66;\n}\n;\nexport function isDeck(spaceId, color) {\n  switch (color) {\n    case \"red\":\n      return spaceId > 110 && spaceId < 119;\n    case \"blue\":\n      return spaceId > 210 && spaceId < 219;\n    case \"green\":\n      return spaceId > 310 && spaceId < 319;\n    case \"yellow\":\n      return spaceId > 410 && spaceId < 419;\n    default:\n      return false;\n  }\n}\n;\nexport function handSpaces(color) {\n  switch (color) {\n    case \"red\":\n      return [101, 102, 103, 104];\n    case \"blue\":\n      return [201, 202, 203, 204];\n    case \"green\":\n      return [301, 302, 303, 304];\n    case \"yellow\":\n      return [401, 402, 403, 404];\n    default:\n      return false;\n  }\n}\n;\nexport function campSpaces(color) {\n  switch (color) {\n    case \"red\":\n      return [21, 31, 41, 51];\n    case \"blue\":\n      return [26, 36, 46, 56];\n    case \"green\":\n      return [12, 13, 14, 15];\n    case \"yellow\":\n      return [62, 63, 64, 65];\n    default:\n      return false;\n  }\n}\n;\nexport function deckSpaces(color) {\n  switch (color) {\n    case \"red\":\n      return [111, 112, 113, 114, 115, 116, 117, 118];\n    case \"blue\":\n      return [211, 212, 213, 214, 215, 216, 217, 218];\n    case \"green\":\n      return [311, 312, 313, 314, 315, 316, 317, 318];\n    case \"yellow\":\n      return [411, 412, 413, 414, 415, 416, 417, 418];\n    default:\n      return false;\n  }\n}\n;\nexport function isLocked(game, board) {\n  const color = game.turn;\n  const boardSpaces = board.filter(_ref => {\n    let {\n      loc\n    } = _ref;\n    return isBoard(loc);\n  });\n  const hasPiece = boardSpaces.filter(_ref2 => {\n    let {\n      contents\n    } = _ref2;\n    return contents.color === color;\n  });\n  const campSpaces = board.filter(_ref3 => {\n    let {\n      loc\n    } = _ref3;\n    return isCamp(loc);\n  });\n  const hasRoom = campSpaces.filter(_ref4 => {\n    let {\n      contents\n    } = _ref4;\n    return contents.type === \"empty\";\n  });\n  if (hasPiece.length > 0 || hasRoom > 0) {\n    return false;\n  } else {\n    return true;\n  }\n}\n;","map":{"version":3,"names":["isHand","spaceId","color","isCamp","isBoard","isDeck","handSpaces","campSpaces","deckSpaces","isLocked","game","board","turn","boardSpaces","filter","_ref","loc","hasPiece","_ref2","contents","_ref3","hasRoom","_ref4","type","length"],"sources":["/home/timloughrist/Code/projects/tunnel-brawl/src/Components/Helpers/checkers.js"],"sourcesContent":["export function isHand(spaceId, color) {\n  switch(color) {\n    case \"red\":\n      return spaceId > 100 && spaceId < 105;\n    case \"blue\":\n      return spaceId > 200 && spaceId < 205;\n    case \"green\":\n      return spaceId > 300 && spaceId < 305;\n    case \"yellow\":\n      return spaceId > 400 && spaceId < 405;\n    default:\n      return false;\n  }\n};\n\nexport function isCamp(spaceId, color) {\n  switch(color) {\n    case \"red\":\n      return spaceId < 100 && spaceId % 10 === 1;\n    case \"blue\":\n      return spaceId < 100 && spaceId % 10 === 6;\n    case \"green\":\n      return spaceId > 11 && spaceId < 16;\n    case \"yellow\":\n      return spaceId > 61 && spaceId < 66;\n    default:\n      return false;\n  }\n};\n\nexport function isBoard(spaceId) {\n  return spaceId > 11 && spaceId < 66\n};\n\nexport function isDeck(spaceId, color) {\n  switch(color) {\n    case \"red\":\n      return spaceId > 110 && spaceId < 119;\n    case \"blue\":\n      return spaceId > 210 && spaceId < 219;\n    case \"green\":\n      return spaceId > 310 && spaceId < 319;\n    case \"yellow\":\n      return spaceId > 410 && spaceId < 419;\n    default:\n      return false;\n  }\n};\n\nexport function handSpaces(color) {\n  switch(color) {\n    case \"red\":\n      return [101, 102, 103, 104];\n    case \"blue\":\n      return [201, 202, 203, 204];\n    case \"green\":\n      return [301, 302, 303, 304];\n    case \"yellow\":\n      return [401, 402, 403, 404];\n    default:\n      return false;\n  }\n};\n\nexport function campSpaces(color) {\n  switch(color) {\n    case \"red\":\n      return [21, 31, 41, 51];\n    case \"blue\":\n      return [26, 36, 46, 56];\n    case \"green\":\n      return [12, 13, 14, 15];\n    case \"yellow\":\n      return [62, 63, 64, 65];\n    default:\n      return false;\n  }\n};\n\nexport function deckSpaces(color) {\n  switch(color) {\n    case \"red\":\n      return [111, 112, 113, 114, 115, 116, 117, 118];\n    case \"blue\":\n      return [211, 212, 213, 214, 215, 216, 217, 218];\n    case \"green\":\n      return [311, 312, 313, 314, 315, 316, 317, 318];\n    case \"yellow\":\n      return [411, 412, 413, 414, 415, 416, 417, 418];\n    default:\n      return false;\n  }\n};\n\nexport function isLocked(game, board) {\n  const color = game.turn;\n  const boardSpaces = board.filter(({loc}) => isBoard(loc));\n  const hasPiece = boardSpaces.filter(({contents}) => contents.color === color);\n  const campSpaces = board.filter(({loc}) => isCamp(loc));\n  const hasRoom = campSpaces.filter(({contents}) => contents.type === \"empty\");\n  if (hasPiece.length > 0 || hasRoom > 0) {\n    return false;\n  } else {\n    return true;\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}