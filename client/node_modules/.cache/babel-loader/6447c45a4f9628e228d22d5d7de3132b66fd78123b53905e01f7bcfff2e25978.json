{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/flatiron/phase-05/capstone/frontend/src/Components/Games/game.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState, useRef } from \"react\";\nimport swal from 'sweetalert';\nimport HostButtonsMid from '../GameControls/hostbtnsmid.js';\nimport HostButtonsBegin from '../GameControls/hostbtnsbegin.js';\nimport GuestButtons from '../GameControls/guestbtns.js';\nimport PlayingField from '../Board/playingfield.js';\nimport { UserContext } from '../../App.js';\nimport { GamesContext } from './games.js';\nimport { convert } from '../Helpers/converters.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameContext = /*#__PURE__*/createContext();\nexport const BoardContext = /*#__PURE__*/createContext();\nexport const ColorContext = /*#__PURE__*/createContext();\nexport const BoardIdContext = /*#__PURE__*/createContext();\nexport const ActivePieceContext = /*#__PURE__*/createContext();\nexport default function Game(_ref) {\n  _s();\n  let {\n    gamePkg,\n    setGames,\n    setSelectedGame\n  } = _ref;\n  const [boardId, setBoardId] = useState(gamePkg.board.id);\n  const user = useContext(UserContext);\n  const games = useContext(GamesContext);\n  const setterBundle = {\n    setGames: setGames,\n    setActivePiece: setActivePiece\n  };\n  const [game, _setGame] = useState(gamePkg.game);\n  const [board, _setBoard] = useState(convert(gamePkg.board, setterBundle));\n  const [color, _setColor] = useState(gamePkg.game.players.find(_ref2 => {\n    let {\n      user_id\n    } = _ref2;\n    return user_id === user.id;\n  }).color);\n  const [activePiece, _setActivePiece] = useState();\n  const [moveAcknowledged, setMoveAcknowledged] = useState(false);\n  const isHost = gamePkg.game.host_id === user.id;\n  const gameRef = useRef(game);\n  const boardRef = useRef(board);\n  const colorRef = useRef(color);\n  const activeRef = useRef(activePiece);\n  function setGame(data) {\n    _setGame(data);\n    gameRef.current = data;\n  }\n  ;\n  function setBoard(data) {\n    _setBoard(data);\n    boardRef.current = data;\n  }\n  ;\n  function setColor(data) {\n    _setColor(data);\n    colorRef.current = data;\n  }\n  ;\n  function setActivePiece(data) {\n    _setActivePiece(data);\n    activeRef.current = data;\n  }\n  ;\n  function announceGameWinner() {\n    const winner = gamePkg.game.players.find(player => {\n      return player.status === \"winner\";\n    });\n    return swal(\"Game Over\", `${winner.username} Wins!`);\n  }\n  ;\n  function announceMove() {\n    if (game.round === 1) {\n      return swal(\"It's your move.\", \"After your move, don't forget to place a new piece from your hand onto one of the four squares of your tunnel.\");\n    } else {\n      return swal(\"It's your move.\");\n    }\n  }\n  ;\n  useEffect(() => {\n    if (Object.keys(gamePkg).length > 0) {\n      setGame(gamePkg.game);\n      setBoard(convert(gamePkg.board, setterBundle));\n      setBoardId(gamePkg.board.id);\n      setColor(gamePkg.game.players.find(_ref3 => {\n        let {\n          user_id\n        } = _ref3;\n        return user_id === user.id;\n      }).color);\n      //Dev only\n      //setColor(gamePkg.game.turn)\n    }\n  }, [gamePkg]);\n  useEffect(() => {\n    if (gamePkg.game.status === \"complete\") {\n      announceGameWinner();\n    } else if (gamePkg.game.status === \"canceled\") {\n      swal(`${gamePkg.game.title} canceled by ${gamePkg.game.host}.`);\n      setSelectedGame(\"none\");\n    }\n  }, [gamePkg]);\n  useEffect(() => {\n    if (game.turn !== colorRef.current) {\n      setMoveAcknowledged(false);\n    }\n    if (game.turn === colorRef.current && !moveAcknowledged && game.status === \"in progress\") {\n      announceMove().then(value => {\n        if (value) {\n          setMoveAcknowledged(true);\n        }\n      });\n    }\n  }, [game]);\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: gameRef.current,\n    children: /*#__PURE__*/_jsxDEV(BoardContext.Provider, {\n      value: boardRef.current,\n      children: /*#__PURE__*/_jsxDEV(ColorContext.Provider, {\n        value: colorRef.current,\n        children: /*#__PURE__*/_jsxDEV(BoardIdContext.Provider, {\n          value: boardId,\n          children: /*#__PURE__*/_jsxDEV(ActivePieceContext.Provider, {\n            value: activeRef.current,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [isHost ? game.status === \"pending\" ? /*#__PURE__*/_jsxDEV(HostButtonsBegin, {\n                games: games,\n                setGames: setGames,\n                setSelectedGame: setSelectedGame\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(HostButtonsMid, {\n                games: games,\n                setGames: setGames,\n                setSelectedGame: setSelectedGame\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(GuestButtons, {\n                game: gameRef.current,\n                setGames: setGames,\n                setSelectedGame: setSelectedGame\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(PlayingField, {\n                setterBundle: setterBundle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"K8twitGVA++VOgOigf5eIoBSnX4=\");\n_c = Game;\n;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useRef","swal","HostButtonsMid","HostButtonsBegin","GuestButtons","PlayingField","UserContext","GamesContext","convert","jsxDEV","_jsxDEV","GameContext","BoardContext","ColorContext","BoardIdContext","ActivePieceContext","Game","_ref","_s","gamePkg","setGames","setSelectedGame","boardId","setBoardId","board","id","user","games","setterBundle","setActivePiece","game","_setGame","_setBoard","color","_setColor","players","find","_ref2","user_id","activePiece","_setActivePiece","moveAcknowledged","setMoveAcknowledged","isHost","host_id","gameRef","boardRef","colorRef","activeRef","setGame","data","current","setBoard","setColor","announceGameWinner","winner","player","status","username","announceMove","round","Object","keys","length","_ref3","title","host","turn","then","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/timloughrist/Code/flatiron/phase-05/capstone/frontend/src/Components/Games/game.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, useRef } from \"react\";\nimport swal from 'sweetalert';\nimport HostButtonsMid from '../GameControls/hostbtnsmid.js';\nimport HostButtonsBegin from '../GameControls/hostbtnsbegin.js';\nimport GuestButtons from '../GameControls/guestbtns.js';\nimport PlayingField from '../Board/playingfield.js';\nimport { UserContext } from '../../App.js';\nimport { GamesContext } from './games.js';\nimport { convert } from '../Helpers/converters.js';\n\nexport const GameContext = createContext();\nexport const BoardContext = createContext();\nexport const ColorContext = createContext();\nexport const BoardIdContext = createContext();\nexport const ActivePieceContext = createContext();\n\nexport default function Game({ gamePkg, setGames, setSelectedGame }) {\n  \n  const [boardId, setBoardId] = useState(gamePkg.board.id);\n  const user = useContext(UserContext);\n  const games = useContext(GamesContext);\n  const setterBundle = {setGames: setGames, setActivePiece: setActivePiece};\n  const [game, _setGame] = useState(gamePkg.game);\n  const [board, _setBoard] = useState(convert(gamePkg.board, setterBundle));\n  const [color, _setColor] = useState(gamePkg.game.players.find(({user_id}) => user_id === user.id).color);\n  const [activePiece, _setActivePiece] = useState();\n  const [moveAcknowledged, setMoveAcknowledged] = useState(false);\n  const isHost = gamePkg.game.host_id === user.id;\n  const gameRef = useRef(game);\n  const boardRef = useRef(board);\n  const colorRef = useRef(color);\n  const activeRef = useRef(activePiece);\n\n  function setGame(data) {\n    _setGame(data);\n    gameRef.current = data;\n  };\n\n  function setBoard(data) {\n    _setBoard(data);\n    boardRef.current = data;\n  };\n\n  function setColor(data) {\n    _setColor(data);\n    colorRef.current = data;\n  };\n\n  function setActivePiece(data) {\n    _setActivePiece(data);\n    activeRef.current = data;\n  };\n\n  function announceGameWinner() {\n    const winner = gamePkg.game.players.find((player) => {\n      return player.status === \"winner\";\n    });\n    return swal(\"Game Over\", `${winner.username} Wins!`);\n  };\n\n  function announceMove() {\n    if (game.round === 1) {\n      return swal(\"It's your move.\", \"After your move, don't forget to place a new piece from your hand onto one of the four squares of your tunnel.\");\n    } else {\n      return swal(\"It's your move.\");\n    }\n  };\n\n  useEffect(() => {\n    if (Object.keys(gamePkg).length > 0) {\n      setGame(gamePkg.game);\n      setBoard(convert(gamePkg.board, setterBundle));\n      setBoardId(gamePkg.board.id)\n      setColor(gamePkg.game.players.find(({user_id}) => user_id === user.id).color);\n      //Dev only\n      //setColor(gamePkg.game.turn)\n    }\n  }, [gamePkg])\n\n  useEffect(() => {\n    if (gamePkg.game.status === \"complete\") {\n      announceGameWinner();\n    } else if (gamePkg.game.status === \"canceled\") {\n      swal(`${gamePkg.game.title} canceled by ${gamePkg.game.host}.`);\n      setSelectedGame(\"none\");\n    }\n  }, [gamePkg]);\n\n  useEffect(() => {\n    if (game.turn !== colorRef.current) {\n      setMoveAcknowledged(false);\n    }\n    if (game.turn === colorRef.current && !moveAcknowledged  && game.status === \"in progress\") {\n      announceMove()\n      .then((value) => {\n        if (value) {\n          setMoveAcknowledged(true);\n        }\n      });\n    }\n  }, [game]);\n  \n  return (\n    <GameContext.Provider value={gameRef.current}>\n      <BoardContext.Provider value={boardRef.current}>\n        <ColorContext.Provider value={colorRef.current}>\n          <BoardIdContext.Provider value={boardId}>\n            <ActivePieceContext.Provider value={activeRef.current}>\n              <div>\n                {\n                  isHost ?\n                    game.status === \"pending\" ?\n                      <HostButtonsBegin\n                        games={games}\n                        setGames={setGames}\n                        setSelectedGame={setSelectedGame}\n                      />\n                    : <HostButtonsMid\n                        games={games}\n                        setGames={setGames}\n                        setSelectedGame={setSelectedGame}\n                      />\n                  : <GuestButtons\n                      game={gameRef.current}\n                      setGames={setGames}\n                      setSelectedGame={setSelectedGame}\n                    />\n                }\n                <PlayingField setterBundle={setterBundle} />\n              </div>\n            </ActivePieceContext.Provider>\n          </BoardIdContext.Provider>\n        </ColorContext.Provider>\n      </BoardContext.Provider>\n    </GameContext.Provider>\n  );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}