{"ast":null,"code":"var _jsxFileName = \"/home/timloughrist/Code/projects/tunnel-brawl/src/Components/Games/games.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef, createContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createConsumer } from \"actioncable\";\nimport Game from './game.js';\nimport GameOptions from './gameoptions.js';\nimport NewGame from './newgame.js';\nimport fetchGames from '../Fetching/fetchgames.js';\nimport submitUser from '../Fetching/updateuser.js';\nimport { LoggedInContext, UserContext } from '../../App.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GamesContext = /*#__PURE__*/createContext();\nfunction Games(_ref) {\n  _s();\n  let {} = _ref;\n  const isLoggedIn = useContext(LoggedInContext);\n  const user = useContext(UserContext);\n  const [games, _setGames] = useState([]);\n  const [selectedGame, setSelectedGame] = useState(\"none\");\n  const [gamePkg, _setGamePkg] = useState({});\n  const [cable, setCable] = useState(createConsumer('ws://localhost:3000/cable'));\n  const [subscript, setSubscript] = useState({});\n  const navigate = useNavigate();\n  const gamesRef = useRef(games);\n  const gamePkgRef = useRef(gamePkg);\n  function setGames(data) {\n    gamesRef.current = data;\n    _setGames(data);\n  }\n  ;\n  function setGamePkg(data) {\n    gamePkgRef.current = data;\n    _setGames(data);\n  }\n  ;\n  function subscribe() {\n    const sub = cable.subscriptions.create({\n      channel: 'GameChannel',\n      id: selectedGame\n    }, {\n      connected: () => {\n        const identifier = JSON.parse(sub.identifier);\n        console.log(`Connected to the channel: GameChannel ${identifier.id}`);\n      },\n      disconnected: () => {\n        const identifier = JSON.parse(sub.identifier);\n        console.log(`Disconnected from the channel: GameChannel ${identifier.id}`);\n      },\n      received: async data => {\n        const identifier = JSON.parse(sub.identifier);\n        console.log(`Receiving data from channel: GameChannel ${identifier.id}`);\n        setGamePkg(data);\n      }\n    });\n    setSubscript(sub);\n  }\n  ;\n  useEffect(() => {\n    async function gameProvider(userId) {\n      const gamePkgs = await fetchGames(userId);\n      setGames(gamePkgs);\n    }\n    if (Object.keys(user).length > 0) {\n      gameProvider(user.id);\n      setSelectedGame(user.current_game);\n    }\n  }, [user]);\n  useEffect(() => {\n    function sendHome(logStatus) {\n      if (logStatus === false) {\n        navigate(\"/home\");\n      }\n    }\n    sendHome(isLoggedIn);\n  }, [isLoggedIn, navigate]);\n  useEffect(() => {\n    cable.subscriptions.remove(subscript);\n    if (selectedGame !== \"none\") {\n      subscribe();\n    }\n  }, [selectedGame]);\n  async function handleSelect(value) {\n    setSelectedGame(value);\n    const updatedUser = await submitUser(user.id, {\n      ...user,\n      current_game: value\n    });\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GamesContext.Provider, {\n      value: gamesRef.current,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleSelect(e.target.value),\n          value: selectedGame,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"none\",\n            children: \"New Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), gamesRef.current.length > 0 ? gamesRef.current.map(game => /*#__PURE__*/_jsxDEV(GameOptions, {\n            game: game.game\n          }, `game${game.game.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            value: {},\n            children: \"No games available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: selectedGame !== \"none\" && Object.keys(gamePkgRef.current).length > 0 ? /*#__PURE__*/_jsxDEV(Game, {\n          gamePkg: gamePkgRef.current,\n          setGames: setGames,\n          selectedGame: selectedGame,\n          setSelectedGame: setSelectedGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(NewGame, {\n          setGames: setGames,\n          setGame: setSelectedGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(Games, \"HE4yLaqUNPFZEHd57Ls/hggZi+c=\", false, function () {\n  return [useNavigate];\n});\n_c = Games;\n;\nexport default Games;\nvar _c;\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","createContext","useNavigate","createConsumer","Game","GameOptions","NewGame","fetchGames","submitUser","LoggedInContext","UserContext","jsxDEV","_jsxDEV","GamesContext","Games","_ref","_s","isLoggedIn","user","games","_setGames","selectedGame","setSelectedGame","gamePkg","_setGamePkg","cable","setCable","subscript","setSubscript","navigate","gamesRef","gamePkgRef","setGames","data","current","setGamePkg","subscribe","sub","subscriptions","create","channel","id","connected","identifier","JSON","parse","console","log","disconnected","received","gameProvider","userId","gamePkgs","Object","keys","length","current_game","sendHome","logStatus","remove","handleSelect","value","updatedUser","children","Provider","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","game","setGame","_c","$RefreshReg$"],"sources":["/home/timloughrist/Code/projects/tunnel-brawl/src/Components/Games/games.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef, createContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createConsumer } from \"actioncable\";\nimport Game from './game.js';\nimport GameOptions from './gameoptions.js';\nimport NewGame from './newgame.js';\nimport fetchGames from '../Fetching/fetchgames.js';\nimport submitUser from '../Fetching/updateuser.js';\nimport { LoggedInContext, UserContext } from '../../App.js';\n\nexport const GamesContext = createContext();\n\nfunction Games({ }) {\n  \n  const isLoggedIn = useContext(LoggedInContext);\n  const user = useContext(UserContext);\n  const [games, _setGames] = useState([]);\n  const [selectedGame, setSelectedGame] = useState(\"none\");\n  const [gamePkg, _setGamePkg] = useState({});\n  const [cable, setCable] = useState(createConsumer('ws://localhost:3000/cable'));\n  const [subscript, setSubscript] = useState({});\n  const navigate = useNavigate();\n\n  const gamesRef = useRef(games);\n  const gamePkgRef = useRef(gamePkg);\n\n  function setGames(data) {\n    gamesRef.current = data;\n    _setGames(data);\n  };\n\n  function setGamePkg(data) {\n    gamePkgRef.current = data;\n    _setGames(data);\n  };\n\n  function subscribe() {\n    const sub = cable.subscriptions.create({\n      channel: 'GameChannel',\n      id: selectedGame\n    }, {\n      connected: () => {\n        const identifier = JSON.parse(sub.identifier);\n        console.log(`Connected to the channel: GameChannel ${identifier.id}`);\n      },\n      disconnected: () => {\n        const identifier = JSON.parse(sub.identifier);\n        console.log(`Disconnected from the channel: GameChannel ${identifier.id}`);\n      },\n      received: async (data) => {\n        const identifier = JSON.parse(sub.identifier);\n        console.log(`Receiving data from channel: GameChannel ${identifier.id}`);\n        setGamePkg(data);\n      }\n    });\n    setSubscript(sub);\n  };\n\n  useEffect(() => {\n    async function gameProvider(userId) {\n      const gamePkgs = await fetchGames(userId);\n      setGames(gamePkgs);\n    }\n    if (Object.keys(user).length > 0) {\n      gameProvider(user.id);\n      setSelectedGame(user.current_game);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    function sendHome(logStatus) {\n      if (logStatus === false) {\n        navigate(\"/home\");\n      }\n    }\n    sendHome(isLoggedIn);\n  }, [isLoggedIn, navigate]);\n\n  useEffect(() => {\n    cable.subscriptions.remove(subscript);\n    if (selectedGame !== \"none\") {\n      subscribe();\n    }\n  }, [selectedGame]);\n\n  async function handleSelect(value) {\n    setSelectedGame(value);\n    const updatedUser = await submitUser(user.id, {...user, current_game: value})\n  };\n\n  return (\n    <div>\n      <GamesContext.Provider value={gamesRef.current}>\n        <div>\n          <select\n            onChange={(e) => handleSelect(e.target.value)}\n            value={selectedGame}\n          >\n            <option value={\"none\"}>New Game</option>\n            {\n              gamesRef.current.length > 0 ?\n              gamesRef.current.map((game) =>\n                  <GameOptions\n                    key={`game${game.game.id}`}\n                    game={game.game}\n                  />\n                )\n              : <option value={{}}>No games available</option>\n            }\n          </select>\n        </div>\n        <div>\n          {\n            selectedGame !== \"none\" && Object.keys(gamePkgRef.current).length > 0 ?\n              <Game\n                gamePkg={gamePkgRef.current}\n                setGames={setGames}\n                selectedGame={selectedGame}\n                setSelectedGame = {setSelectedGame}\n              />\n            : <NewGame\n                setGames={setGames}\n                setGame={setSelectedGame}\n              />\n          }\n        </div>\n      </GamesContext.Provider>\n    </div>\n  );\n};\n\nexport default Games;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}